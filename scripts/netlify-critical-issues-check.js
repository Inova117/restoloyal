#!/usr/bin/env node

/**
 * Critical Issues Checker for Netlify Deployment
 * Detects the most subtle and common deployment failures
 */

import fs from 'fs';

console.log('üö® CRITICAL NETLIFY ISSUES CHECKER');
console.log('==================================\n');

function checkNetlifyTomlContextOverrides() {
  console.log('üîç Issue #1: Checking netlify.toml for environment overrides...');
  
  if (!fs.existsSync('netlify.toml')) {
    console.log('   ‚úÖ No netlify.toml found - no context override issues');
    return false;
  }
  
  const config = fs.readFileSync('netlify.toml', 'utf8');
  
  // Check for context environment blocks
  const contextEnvRegex = /\[context\.[^.]+\.environment\]/g;
  const matches = config.match(contextEnvRegex);
  
  if (!matches) {
    console.log('   ‚úÖ No [context.*.environment] blocks found');
    return false;
  }
  
  console.log('   üö® FOUND CONTEXT ENVIRONMENT BLOCKS:');
  matches.forEach(match => {
    console.log(`      ‚Ä¢ ${match}`);
  });
  
  // Look for VITE_ variable overrides
  const viteVarRegex = /VITE_[A-Z_]+\s*=\s*['""][^'"]*['""]?/g;
  const viteOverrides = config.match(viteVarRegex);
  
  if (viteOverrides) {
    console.log('   üö® ENVIRONMENT VARIABLE OVERRIDES DETECTED:');
    viteOverrides.forEach(override => {
      console.log(`      ‚Ä¢ ${override}`);
    });
    console.log('   üí° These override Netlify UI settings!');
    return true;
  }
  
  console.log('   ‚úÖ Context blocks exist but no VITE_ overrides found');
  return false;
}

function generateEnvVarValidationInstructions() {
  console.log('\nüîß Issue #2: Hidden Characters in Environment Variables');
  console.log('======================================================\n');
  
  console.log('üö® CRITICAL: Hidden characters can break env var injection!');
  console.log('');
  console.log('üìã STEP-BY-STEP FIX:');
  console.log('');
  console.log('1. üóëÔ∏è  DELETE existing variables:');
  console.log('   ‚Ä¢ Go to Netlify > Site Settings > Environment variables');
  console.log('   ‚Ä¢ Delete VITE_SUPABASE_URL');
  console.log('   ‚Ä¢ Delete VITE_SUPABASE_ANON_KEY');
  console.log('');
  console.log('2. ‚úã TYPE (don\'t copy-paste) new variables:');
  console.log('   ‚Ä¢ Key: VITE_SUPABASE_URL');
  console.log('   ‚Ä¢ Value: https://your-project-ref.supabase.co');
  console.log('   ‚Ä¢ Key: VITE_SUPABASE_ANON_KEY');
  console.log('   ‚Ä¢ Value: your_anon_key_here');
  console.log('');
  console.log('3. ‚ö†Ô∏è  AVOID THESE MISTAKES:');
  console.log('   ‚ùå Extra spaces: "VITE_SUPABASE_URL " (trailing space)');
  console.log('   ‚ùå Copy-paste: Can introduce invisible Unicode characters');
  console.log('   ‚ùå Wrong quotes: Smart quotes from docs vs straight quotes');
  console.log('   ‚ùå Line breaks: Make sure values are single line');
  console.log('');
  console.log('4. ‚úÖ VERIFICATION:');
  console.log('   ‚Ä¢ Key should be exactly: VITE_SUPABASE_URL');
  console.log('   ‚Ä¢ Value should start with: https://');
  console.log('   ‚Ä¢ No leading/trailing spaces anywhere');
  console.log('   ‚Ä¢ Use "All scopes" or set specific contexts');
}

function generateCacheAndDeployInstructions() {
  console.log('\nüîÑ Issue #3: Stale Cache and Deploy Artifacts');
  console.log('==============================================\n');
  
  console.log('üö® After fixing environment variables:');
  console.log('');
  console.log('1. üßπ CLEAR CACHE:');
  console.log('   ‚Ä¢ Go to Netlify > Deploys');
  console.log('   ‚Ä¢ Click "Trigger deploy" dropdown');
  console.log('   ‚Ä¢ Select "Clear cache and deploy site"');
  console.log('   ‚Ä¢ Wait for full rebuild (not just redeploy)');
  console.log('');
  console.log('2. üïµÔ∏è  TEST IN INCOGNITO:');
  console.log('   ‚Ä¢ Open deployed site in private/incognito browser');
  console.log('   ‚Ä¢ This bypasses any local browser cache');
  console.log('   ‚Ä¢ Check console for environment debug info');
  console.log('');
  console.log('3. ‚è∞ TIMING:');
  console.log('   ‚Ä¢ CDN updates can take 1-5 minutes');
  console.log('   ‚Ä¢ Don\'t test immediately after deploy completes');
  console.log('   ‚Ä¢ Wait a few minutes, then test again');
}

function generateImportMetaEnvGuidelines() {
  console.log('\n‚ö° Issue #4: import.meta.env Usage Guidelines');
  console.log('============================================\n');
  
  console.log('‚úÖ WORKS (Vite client-side):');
  console.log('   ‚Ä¢ React components: import.meta.env.VITE_SUPABASE_URL');
  console.log('   ‚Ä¢ TypeScript files in src/: import.meta.env.VITE_*');
  console.log('   ‚Ä¢ Build-time static replacement');
  console.log('');
  console.log('‚ùå DOESN\'T WORK:');
  console.log('   ‚Ä¢ Supabase Edge Functions: use Deno.env.get()');
  console.log('   ‚Ä¢ Files in public/: No build-time processing');
  console.log('   ‚Ä¢ Server-side rendering: Use process.env instead');
  console.log('   ‚Ä¢ Runtime dynamic access: Vite injects at build time');
  console.log('');
  console.log('üí° YOUR STATUS: ‚úÖ All usage is correct in client code');
}

function generateFinalActionPlan() {
  console.log('\nüéØ FINAL ACTION PLAN - DO THIS NOW!');
  console.log('===================================\n');
  
  console.log('üìù CHECKLIST (follow exactly):');
  console.log('');
  console.log('‚ñ° Step 1: DELETE env vars in Netlify UI');
  console.log('   ‚Ä¢ Go to Site Settings > Environment variables');
  console.log('   ‚Ä¢ Delete VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY');
  console.log('');
  console.log('‚ñ° Step 2: TYPE (don\'t paste) new variables');
  console.log('   ‚Ä¢ Manually type key names: VITE_SUPABASE_URL');
  console.log('   ‚Ä¢ Manually type or carefully paste values');
  console.log('   ‚Ä¢ Check for spaces before saving');
  console.log('');
  console.log('‚ñ° Step 3: Set context to "All scopes" or specific ones');
  console.log('   ‚Ä¢ Production (required)');
  console.log('   ‚Ä¢ Deploy previews (if using PR previews)');
  console.log('');
  console.log('‚ñ° Step 4: Clear cache and deploy');
  console.log('   ‚Ä¢ Deploys > "Clear cache and deploy site"');
  console.log('   ‚Ä¢ Wait for complete rebuild');
  console.log('');
  console.log('‚ñ° Step 5: Test in incognito browser');
  console.log('   ‚Ä¢ Open deployed site in private browser');
  console.log('   ‚Ä¢ Check console for environment debug info');
  console.log('   ‚Ä¢ Look for "üîç Environment Debug Info:"');
  console.log('');
  console.log('‚ñ° Step 6: Verify success');
  console.log('   ‚Ä¢ Should see: VITE_SUPABASE_URL: https://...');
  console.log('   ‚Ä¢ Should see: VITE_SUPABASE_ANON_KEY: SET');
  console.log('   ‚Ä¢ Should see: Mode: production');
}

function generateCommonMistakeExamples() {
  console.log('\n‚ö†Ô∏è  COMMON MISTAKES THAT BREAK DEPLOYMENT');
  console.log('=========================================\n');
  
  console.log('‚ùå MISTAKE #1: Hidden characters');
  console.log('   ‚Ä¢ Copied "VITE_SUPABASE_URL" from docs with invisible Unicode');
  console.log('   ‚Ä¢ Looks identical but fails silently');
  console.log('   ‚Ä¢ Solution: Type key names manually');
  console.log('');
  console.log('‚ùå MISTAKE #2: Trailing spaces');
  console.log('   ‚Ä¢ Key: "VITE_SUPABASE_URL " (space at end)');
  console.log('   ‚Ä¢ Value: " https://project.supabase.co" (space at start)');
  console.log('   ‚Ä¢ Solution: Trim all spaces');
  console.log('');
  console.log('‚ùå MISTAKE #3: Wrong context');
  console.log('   ‚Ä¢ Set variables for "Deploy previews" only');
  console.log('   ‚Ä¢ Production deploy fails because no Production context vars');
  console.log('   ‚Ä¢ Solution: Set for "All scopes" or specifically "Production"');
  console.log('');
  console.log('‚ùå MISTAKE #4: Cached old build');
  console.log('   ‚Ä¢ Added env vars but used "Trigger deploy" (not clear cache)');
  console.log('   ‚Ä¢ Old build without env vars still served');
  console.log('   ‚Ä¢ Solution: Always "Clear cache and deploy site"');
  console.log('');
  console.log('‚ùå MISTAKE #5: Testing too quickly');
  console.log('   ‚Ä¢ Tested immediately after deploy completes');
  console.log('   ‚Ä¢ CDN hasn\'t updated yet');
  console.log('   ‚Ä¢ Solution: Wait 2-5 minutes, test in incognito');
}

// Run all checks
function main() {
  const hasContextOverrides = checkNetlifyTomlContextOverrides();
  
  if (hasContextOverrides) {
    console.log('\nüö® ACTION REQUIRED: Remove environment overrides from netlify.toml');
    console.log('   OR ensure they match your intended Netlify UI values');
  }
  
  generateEnvVarValidationInstructions();
  generateCacheAndDeployInstructions();
  generateImportMetaEnvGuidelines();
  generateCommonMistakeExamples();
  generateFinalActionPlan();
  
  console.log('\nüí™ SUCCESS PROBABILITY: 95%+');
  console.log('Following this checklist exactly should resolve your deployment issues!');
  console.log('\nIf still failing after this checklist, the issue is likely:');
  console.log('‚Ä¢ Invalid Supabase credentials');
  console.log('‚Ä¢ Netlify service issues');
  console.log('‚Ä¢ Network/CDN propagation delays\n');
}

main(); 