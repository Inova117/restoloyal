#!/usr/bin/env node

/**
 * Setup Environment Variables Script
 * Configura las variables de entorno faltantes identificadas en el audit
 */

const fs = require('fs');
const path = require('path');

const ENV_FILE = '.env.local';
const ENV_EXAMPLE = 'env.example';

// Variables faltantes identificadas en el audit
const MISSING_VARS = {
  'VITE_PLATFORM_ADMIN_EMAILS': 'admin@zerion.com,support@zerion.com,martin@zerion.com',
  'VITE_GALLETTI_ADMIN_EMAILS': 'admin@galletti.com,manager@galletti.com',
  'VITE_APP_NAME': 'Fydely',
  'VITE_APP_URL': 'http://localhost:5173'
};

console.log('🔧 Setting up environment variables...\n');

// Leer archivo env.example si existe
let envContent = '';
if (fs.existsSync(ENV_EXAMPLE)) {
  envContent = fs.readFileSync(ENV_EXAMPLE, 'utf8');
  console.log('✅ Found env.example file');
} else {
  console.log('⚠️  env.example not found, creating from scratch');
  envContent = `# Environment Variables
# Generated by setup-env-vars.js

`;
}

// Verificar si .env.local ya existe
if (fs.existsSync(ENV_FILE)) {
  console.log('⚠️  .env.local already exists');
  
  // Leer contenido existente
  const existingContent = fs.readFileSync(ENV_FILE, 'utf8');
  
  // Verificar qué variables faltan
  const missingInFile = [];
  Object.keys(MISSING_VARS).forEach(key => {
    if (!existingContent.includes(key)) {
      missingInFile.push(key);
    }
  });
  
  if (missingInFile.length > 0) {
    console.log('📝 Adding missing variables to existing .env.local:');
    missingInFile.forEach(key => {
      console.log(`   + ${key}=${MISSING_VARS[key]}`);
    });
    
    // Agregar variables faltantes
    let updatedContent = existingContent;
    if (!updatedContent.endsWith('\n')) {
      updatedContent += '\n';
    }
    
    updatedContent += '\n# Variables agregadas por audit fix\n';
    missingInFile.forEach(key => {
      updatedContent += `${key}=${MISSING_VARS[key]}\n`;
    });
    
    fs.writeFileSync(ENV_FILE, updatedContent);
    console.log('✅ Updated .env.local with missing variables');
  } else {
    console.log('✅ All required variables already present in .env.local');
  }
} else {
  // Crear nuevo .env.local
  console.log('📝 Creating new .env.local file...');
  
  let newContent = envContent;
  
  // Agregar comentario
  newContent += '\n# Variables faltantes agregadas por audit fix\n';
  
  // Agregar variables faltantes
  Object.entries(MISSING_VARS).forEach(([key, value]) => {
    newContent += `${key}=${value}\n`;
  });
  
  fs.writeFileSync(ENV_FILE, newContent);
  console.log('✅ Created .env.local with all required variables');
}

// Validar variables
console.log('\n🧪 Validating environment variables...');

// Leer .env.local para validación
const finalContent = fs.readFileSync(ENV_FILE, 'utf8');

const validationResults = [];
Object.keys(MISSING_VARS).forEach(key => {
  const hasVar = finalContent.includes(key);
  validationResults.push({
    key,
    status: hasVar ? '✅' : '❌',
    present: hasVar
  });
});

validationResults.forEach(result => {
  console.log(`${result.status} ${result.key}`);
});

const allPresent = validationResults.every(r => r.present);

console.log('\n📊 Summary:');
console.log(`Total variables checked: ${validationResults.length}`);
console.log(`Present: ${validationResults.filter(r => r.present).length}`);
console.log(`Missing: ${validationResults.filter(r => !r.present).length}`);

if (allPresent) {
  console.log('\n🎉 All environment variables configured successfully!');
  console.log('\n📝 Next steps:');
  console.log('1. Restart your development server');
  console.log('2. Verify variables are loaded with: npm run dev');
  console.log('3. Check browser console for environment debug info');
} else {
  console.log('\n❌ Some variables are still missing. Please check .env.local file.');
  process.exit(1);
}

console.log('\n🔧 Environment setup complete!'); 